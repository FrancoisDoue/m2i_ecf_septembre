version: "3.8"

networks:
  ecf_network:
volumes:
  ecf_volumes:
  ecf_cache:
    driver: local

services:
  mysql:
    container_name: mysql_ecf
    image: mysql:8.0.39
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ecf_volumes:/var/lib/mysql
      - ./mysql-db/user.sql:/docker-entrypoint-initdb.d/privileges.sql
    ports:
      - "6033:${DB_PORT}"
    networks:
      - ecf_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
  # ------------------------------------------------------------- #
  cache-redis:
    container_name: cache-redis
    image: redis:7.4.0-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ecf_volumes:/data
    networks:
      - ecf_network
  # ------------------------------------------------------------- #
  php_my_admin:
    container_name: admin_ms_library
    image: phpmyadmin:latest
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3030:80"
    environment:
      PMA_HOST: mysql_ecf
    networks:
      - ecf_network
  # ------------------------------------------------------------- #
  common-data-service:
    container_name: common-data-service
    build: ./server/common-data-service
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      cache-redis:
        condition: service_started
#    env_file: ./.env
    environment:
      PORT: ${COMMON_DATA_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      Pour le profil prod:
      REDIS_URL: redis://redis-user:${REDIS_PASSWORD}@redis-cache
      DB_HOST: mysql_ecf
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
      REDIS_HOST: cache-redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REACT_APP_COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}"
    networks:
      - ecf_network
  # ------------------------------------------------------------- #
  authentication-service:
    container_name: authentication-service
    build: ./server/authentication-service
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      cache-redis:
        condition: service_started
    environment:
      PORT: ${AUTHENTICATION_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_HOST: mysql_ecf
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
    ports:
      - "${REACT_APP_AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    networks:
      - ecf_network
  # ------------------------------------------------------------- #
  search-suggestion-service:
    container_name: search-suggestion-service
    build: ./server/search-suggestion-service
    restart: unless-stopped
    depends_on:
      - common-data-service
    environment:
      PORT: ${SEARCH_SUGGESTION_SERVICE_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      COMMON_DATA_SERVICE_URL: http://common-data-service:${COMMON_DATA_SERVICE_PORT}
    ports:
      - "${REACT_APP_SEARCH_SUGGESTION_SERVICE_PORT}:${SEARCH_SUGGESTION_SERVICE_PORT}"
    networks:
      - ecf_network
  # ------------------------------------------------------------- #
  payment-service:
    container_name: payment-service
    build: ./server/payment-service
    restart: unless-stopped
    environment:
      PORT: ${PAYMENT_SERVICE_PORT}
      STRIPE_SECRET_KEY: react_better_than_vue
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    networks:
      - ecf_network
  # ============================================================ #
  client-react:
    container_name: client-react
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_AUTHENTICATION_SERVICE_PORT: ${REACT_APP_AUTHENTICATION_SERVICE_PORT}
        REACT_APP_COMMON_DATA_SERVICE_PORT: ${REACT_APP_COMMON_DATA_SERVICE_PORT}
        REACT_APP_SEARCH_SUGGESTION_SERVICE_PORT: ${REACT_APP_SEARCH_SUGGESTION_SERVICE_PORT}
    restart: on-failure
    depends_on:
      - authentication-service
      - common-data-service
      - payment-service
      - search-suggestion-service
    ports:
      - "3000:3000"
